Scrutinee: 1
Pattern: 1
Result: Some(List())

Scrutinee: 1
Pattern: 2
Result: None

Scrutinee: (1: scala.Int)
Pattern: 1
Result: Some(List())

Scrutinee: (1: scala.Int)
Pattern: (1: scala.Int)
Result: Some(List())

Scrutinee: 1
Pattern: (1: scala.Int)
Result: Some(List())

Scrutinee: 3
Pattern: scala.internal.quoted.CompileTime.patternHole[scala.Int]
Result: Some(List(Expr(3)))

Scrutinee: x
Pattern: scala.internal.quoted.CompileTime.patternHole[scala.Int]
Result: Some(List(Expr(x)))

Scrutinee: 5
Pattern: scala.internal.quoted.CompileTime.patternHole[scala.Any]
Result: Some(List(Expr(5)))

Scrutinee: 6.+(x)
Pattern: scala.internal.quoted.CompileTime.patternHole[scala.Int]
Result: Some(List(Expr(6.+(x))))

Scrutinee: 6.+(x)
Pattern: 6.+(scala.internal.quoted.CompileTime.patternHole[scala.Int])
Result: Some(List(Expr(x)))

Scrutinee: 6.+(x)
Pattern: scala.internal.quoted.CompileTime.patternHole[scala.Int].+(x)
Result: Some(List(Expr(6)))

Scrutinee: 6.+(x)
Pattern: scala.internal.quoted.CompileTime.patternHole[scala.Int].+(scala.internal.quoted.CompileTime.patternHole[scala.Int])
Result: Some(List(Expr(6), Expr(x)))

Scrutinee: 6.+(x).+(y)
Pattern: 6.+(scala.internal.quoted.CompileTime.patternHole[scala.Int]).+(y)
Result: Some(List(Expr(x)))

Scrutinee: 4
Pattern: scala.internal.quoted.CompileTime.patternHole[scala.Predef.String]
Result: None

Scrutinee: 6.+(x)
Pattern: 7.+(scala.internal.quoted.CompileTime.patternHole[scala.Int])
Result: None

Scrutinee: 6.+(x)
Pattern: scala.internal.quoted.CompileTime.patternHole[scala.Int].+(4)
Result: None

Scrutinee: g[scala.Int]
Pattern: scala.internal.quoted.CompileTime.patternHole[scala.Predef.String]
Result: None

Scrutinee: h[scala.Int](7)
Pattern: h[scala.Predef.String](scala.internal.quoted.CompileTime.patternHole[scala.Predef.String])
Result: None

Scrutinee: h[scala.Int](6)
Pattern: h[scala.Int](7)
Result: None

Scrutinee: z = 4
Pattern: z = 5
Result: None

Scrutinee: z = 4
Pattern: z2 = 4
Result: None

Scrutinee: f(4)
Pattern: scala.internal.quoted.CompileTime.patternHole[scala.Int]
Result: Some(List(Expr(f(4))))

Scrutinee: f(5)
Pattern: f(scala.internal.quoted.CompileTime.patternHole[scala.Int])
Result: Some(List(Expr(5)))

Scrutinee: g[scala.Int]
Pattern: scala.internal.quoted.CompileTime.patternHole[scala.Int]
Result: Some(List(Expr(g[scala.Int])))

Scrutinee: h[scala.Int](7)
Pattern: scala.internal.quoted.CompileTime.patternHole[scala.Int]
Result: Some(List(Expr(h[scala.Int](7))))

Scrutinee: h[scala.Int](8)
Pattern: h[scala.Int](scala.internal.quoted.CompileTime.patternHole[scala.Int])
Result: Some(List(Expr(8)))

Scrutinee: Test.this
Pattern: Test.this
Result: Some(List())

Scrutinee: Test.this
Pattern: scala.internal.quoted.CompileTime.patternHole[this.type]
Result: Some(List(Expr(Test.this)))

Scrutinee: new Foo(1)
Pattern: new Foo(1)
Result: Some(List())

Scrutinee: new Foo(1)
Pattern: scala.internal.quoted.CompileTime.patternHole[Foo]
Result: Some(List(Expr(new Foo(1))))

Scrutinee: new Foo(1)
Pattern: new Foo(scala.internal.quoted.CompileTime.patternHole[scala.Int])
Result: Some(List(Expr(1)))

Scrutinee: if (b) x else y
Pattern: if (b) x else y
Result: Some(List())

Scrutinee: if (b) x else y
Pattern: scala.internal.quoted.CompileTime.patternHole[scala.Int]
Result: Some(List(Expr(if (b) x else y)))

Scrutinee: if (b) x else y
Pattern: if (scala.internal.quoted.CompileTime.patternHole[scala.Boolean]) scala.internal.quoted.CompileTime.patternHole[scala.Int] else scala.internal.quoted.CompileTime.patternHole[scala.Int]
Result: Some(List(Expr(b), Expr(x), Expr(y)))

Scrutinee: while (b) {
  x
  ()
}
Pattern: while (b) {
  x
  ()
}
Result: Some(List())

Scrutinee: while (b) {
  x
  ()
}
Pattern: scala.internal.quoted.CompileTime.patternHole[scala.Unit]
Result: Some(List(Expr(while (b) {
  x
  ()
})))

Scrutinee: while (b) {
  x
  ()
}
Pattern: while (scala.internal.quoted.CompileTime.patternHole[scala.Boolean]) {
  scala.internal.quoted.CompileTime.patternHole[scala.Int]
  ()
}
Result: Some(List(Expr(b), Expr(x)))

Scrutinee: z = 4
Pattern: z = 4
Result: Some(List())

Scrutinee: z = 4
Pattern: scala.internal.quoted.CompileTime.patternHole[scala.Unit]
Result: Some(List(Expr(z = 4)))

Scrutinee: z = 4
Pattern: z = scala.internal.quoted.CompileTime.patternHole[scala.Int]
Result: Some(List(Expr(4)))

Scrutinee: 1
Pattern: 1
Result: Some(List())

Scrutinee: 1
Pattern: 1
Result: Some(List())

Scrutinee: fs()
Pattern: fs()
Result: Some(List())

Scrutinee: fs()
Pattern: fs(scala.internal.quoted.CompileTime.patternHole[scala.Seq[scala.Int]]: _*)
Result: Some(List(Expr()))

Scrutinee: fs(1, 2, 3)
Pattern: fs(1, 2, 3)
Result: Some(List())

Scrutinee: fs(1, 2, 3)
Pattern: fs(scala.internal.quoted.CompileTime.patternHole[scala.Int], scala.internal.quoted.CompileTime.patternHole[scala.Int], 3)
Result: Some(List(Expr(1), Expr(2)))

Scrutinee: fs(1, 2, 3)
Pattern: fs(scala.internal.quoted.CompileTime.patternHole[scala.Seq[scala.Int]]: _*)
Result: Some(List(Expr(1, 2, 3)))

Scrutinee: f2(1, 2)
Pattern: f2(1, 2)
Result: Some(List())

Scrutinee: f2(a = 1, b = 2)
Pattern: f2(a = 1, b = 2)
Result: Some(List())

Scrutinee: f2(a = 1, b = 2)
Pattern: f2(a = scala.internal.quoted.CompileTime.patternHole[scala.Int], b = scala.internal.quoted.CompileTime.patternHole[scala.Int])
Result: Some(List(Expr(1), Expr(2)))

Scrutinee: super.toString()
Pattern: super.toString()
Result: Some(List())

Scrutinee: (() => "abc")
Pattern: scala.internal.quoted.CompileTime.patternHole[scala.Function0[scala.Predef.String]]
Result: Some(List(Expr((() => "abc"))))

Scrutinee: (() => "abc").apply()
Pattern: scala.internal.quoted.CompileTime.patternHole[scala.Function0[scala.Predef.String]].apply()
Result: Some(List(Expr((() => "abc"))))

Scrutinee: ((x: scala.Int) => "abc")
Pattern: scala.internal.quoted.CompileTime.patternHole[scala.Function1[scala.Int, scala.Predef.String]]
Result: Some(List(Expr(((x: scala.Int) => "abc"))))

Scrutinee: ((x: scala.Int) => "abc").apply(4)
Pattern: scala.internal.quoted.CompileTime.patternHole[scala.Function1[scala.Int, scala.Predef.String]].apply(4)
Result: Some(List(Expr(((x: scala.Int) => "abc"))))

Scrutinee: ((x: scala.Int) => "abc")
Pattern: ((x: scala.Int) => scala.internal.quoted.CompileTime.patternHole[scala.Predef.String])
Result: Some(List(Expr("abc")))

Scrutinee: scala.StringContext.apply("abc", "xyz")
Pattern: scala.StringContext.apply("abc", "xyz")
Result: Some(List())

Scrutinee: scala.StringContext.apply("abc", "xyz")
Pattern: scala.StringContext.apply(scala.internal.quoted.CompileTime.patternHole[java.lang.String], scala.internal.quoted.CompileTime.patternHole[java.lang.String])
Result: Some(List(Expr("abc"), Expr("xyz")))

Scrutinee: scala.StringContext.apply("abc", "xyz")
Pattern: scala.StringContext.apply(scala.internal.quoted.CompileTime.patternHole[scala.Seq[scala.Predef.String]]: _*)
Result: Some(List(Expr("abc", "xyz")))

Scrutinee: {
  val a: scala.Int = 45
  ()
}
Pattern: {
  val a: scala.Int = 45
  ()
}
Result: Some(List())

Scrutinee: {
  val a: scala.Int = 45
  ()
}
Pattern: {
  val a: scala.Int = scala.internal.quoted.CompileTime.patternHole[scala.Int]
  ()
}
Result: Some(List(Expr(45)))

Scrutinee: {
  val a: scala.Int = 45
  ()
}
Pattern: {
  lazy val a: scala.Int = 45
  ()
}
Result: None

Scrutinee: {
  val a: scala.Int = 45
  ()
}
Pattern: {
  var a: scala.Int = 45
  ()
}
Result: None

Scrutinee: {
  val a: scala.Int = 45
  ()
}
Pattern: {
  var a: scala.Int = scala.internal.quoted.CompileTime.patternHole[scala.Int]
  ()
}
Result: None

Scrutinee: {
  val a: scala.Int = 45
  a.+(a)
}
Pattern: {
  val x: scala.Int = 45
  x.+(x)
}
Result: Some(List())

Scrutinee: {
  val a: scala.Int = 45
  val b: scala.Int = a
  ()
}
Pattern: {
  val x: scala.Int = 45
  val y: scala.Int = x
  ()
}
Result: Some(List())

Scrutinee: {
  val a: scala.Int = 45
  a.+(a)
}
Pattern: {
  val x: scala.Int = 45
  x.+(scala.internal.quoted.CompileTime.patternHole[scala.Int])
}
Result: None

Scrutinee: {
  lazy val a: scala.Int = 45
  ()
}
Pattern: {
  val a: scala.Int = 45
  ()
}
Result: None

Scrutinee: {
  lazy val a: scala.Int = 45
  ()
}
Pattern: {
  lazy val a: scala.Int = 45
  ()
}
Result: Some(List())

Scrutinee: {
  lazy val a: scala.Int = 45
  ()
}
Pattern: {
  var a: scala.Int = 45
  ()
}
Result: None

Scrutinee: {
  lazy val a: scala.Int = 45
  ()
}
Pattern: {
  val a: scala.Int = scala.internal.quoted.CompileTime.patternHole[scala.Int]
  ()
}
Result: None

Scrutinee: {
  lazy val a: scala.Int = 45
  ()
}
Pattern: {
  var a: scala.Int = scala.internal.quoted.CompileTime.patternHole[scala.Int]
  ()
}
Result: None

Scrutinee: {
  var a: scala.Int = 45
  ()
}
Pattern: {
  val a: scala.Int = 45
  ()
}
Result: None

Scrutinee: {
  var a: scala.Int = 45
  ()
}
Pattern: {
  lazy val a: scala.Int = 45
  ()
}
Result: None

Scrutinee: {
  var a: scala.Int = 45
  ()
}
Pattern: {
  var a: scala.Int = 45
  ()
}
Result: Some(List())

Scrutinee: {
  var a: scala.Int = 45
  ()
}
Pattern: {
  val a: scala.Int = scala.internal.quoted.CompileTime.patternHole[scala.Int]
  ()
}
Result: None

Scrutinee: {
  var a: scala.Int = 45
  ()
}
Pattern: {
  lazy val a: scala.Int = scala.internal.quoted.CompileTime.patternHole[scala.Int]
  ()
}
Result: None

Scrutinee: {
  scala.Predef.println()
  scala.Predef.println()
}
Pattern: {
  scala.Predef.println()
  scala.Predef.println()
}
Result: Some(List())

Scrutinee: {
  scala.Predef.println()
  scala.Predef.println()
}
Pattern: {
  scala.Predef.println()
  scala.Predef.println()
}
Result: Some(List())

Scrutinee: {
  scala.Predef.println()
  scala.Predef.println()
}
Pattern: {
  scala.Predef.println()
  scala.Predef.println()
}
Result: Some(List())

Scrutinee: {
  scala.Predef.println()
  scala.Predef.println()
}
Pattern: {
  scala.Predef.println()
  scala.Predef.println()
}
Result: Some(List())

Scrutinee: {
  scala.Predef.println()
  scala.Predef.println()
}
Pattern: {
  scala.Predef.println()
  scala.Predef.println()
}
Result: Some(List())

Scrutinee: {
  def a: scala.Int = 45
  ()
}
Pattern: {
  def a: scala.Int = 45
  ()
}
Result: Some(List())

Scrutinee: {
  def a: scala.Int = 45
  ()
}
Pattern: {
  def a: scala.Int = scala.internal.quoted.CompileTime.patternHole[scala.Int]
  ()
}
Result: Some(List(Expr(45)))

Scrutinee: {
  def a(x: scala.Int): scala.Int = 45
  ()
}
Pattern: {
  def a(x: scala.Int): scala.Int = 45
  ()
}
Result: Some(List())

Scrutinee: {
  def a(x: scala.Int): scala.Int = 45
  ()
}
Pattern: {
  def a(x: scala.Int, y: scala.Int): scala.Int = 45
  ()
}
Result: None

Scrutinee: {
  def a(x: scala.Int): scala.Int = 45
  ()
}
Pattern: {
  def a(x: scala.Int)(y: scala.Int): scala.Int = 45
  ()
}
Result: None

Scrutinee: {
  def a(x: scala.Int, y: scala.Int): scala.Int = 45
  ()
}
Pattern: {
  def a(x: scala.Int): scala.Int = 45
  ()
}
Result: None

Scrutinee: {
  def a(x: scala.Int)(y: scala.Int): scala.Int = 45
  ()
}
Pattern: {
  def a(x: scala.Int): scala.Int = 45
  ()
}
Result: None

Scrutinee: {
  def a(x: scala.Predef.String): scala.Int = 45
  ()
}
Pattern: {
  def a(x: scala.Predef.String): scala.Int = 45
  ()
}
Result: Some(List())

Scrutinee: {
  def a(x: scala.Int): scala.Int = 45
  ()
}
Pattern: {
  def a(x: scala.Int): scala.Int = 45
  ()
}
Result: Some(List())

Scrutinee: {
  def a(x: scala.Int): scala.Int = 45
  ()
}
Pattern: {
  def a(x: scala.Int): scala.Int = 45
  ()
}
Result: Some(List())

Scrutinee: {
  def a(x: scala.Int): scala.Int = x
  ()
}
Pattern: {
  def b(y: scala.Int): scala.Int = y
  ()
}
Result: Some(List())

Scrutinee: {
  def a: scala.Int = a
  ()
}
Pattern: {
  def b: scala.Int = b
  ()
}
Result: Some(List())

Scrutinee: {
  def a: scala.Int = a
  a.+(a)
}
Pattern: {
  def a: scala.Int = a
  a.+(a)
}
Result: Some(List())

Scrutinee: {
  def a: scala.Int = a
  a.+(a)
}
Pattern: {
  def a: scala.Int = scala.internal.quoted.CompileTime.patternHole[scala.Int]
  a.+(scala.internal.quoted.CompileTime.patternHole[scala.Int])
}
Result: None

Scrutinee: {
  lazy val a: scala.Int = a
  ()
}
Pattern: {
  lazy val b: scala.Int = b
  ()
}
Result: Some(List())

Scrutinee: scala.List.apply[scala.Int](1, 2, 3).foreach[scala.Unit](((x: scala.Int) => scala.Predef.println(x)))
Pattern: {
  @scala.internal.quoted.CompileTime.patternType type T
  scala.internal.quoted.CompileTime.patternHole[scala.List[scala.Int]].foreach[T](scala.internal.quoted.CompileTime.patternHole[scala.Function1[scala.Int, T]])
}
Result: Some(List(Type(scala.Unit), Expr(scala.List.apply[scala.Int](1, 2, 3)), Expr(((x: scala.Int) => scala.Predef.println(x)))))

Scrutinee: scala.List.apply[scala.Int](1, 2, 3).foreach[scala.Unit](((x: scala.Int) => scala.Predef.println(x)))
Pattern: {
  @scala.internal.quoted.CompileTime.patternType type T = scala.Unit
  scala.internal.quoted.CompileTime.patternHole[scala.List[scala.Int]].foreach[T](scala.internal.quoted.CompileTime.patternHole[scala.Function1[scala.Int, T]])
}
Result: Some(List(Type(scala.Unit), Expr(scala.List.apply[scala.Int](1, 2, 3)), Expr(((x: scala.Int) => scala.Predef.println(x)))))

Scrutinee: scala.List.apply[scala.Int](1, 2, 3).foreach[scala.Unit](((x: scala.Int) => scala.Predef.println(x)))
Pattern: {
  @scala.internal.quoted.CompileTime.patternType type T <: scala.Predef.String
  scala.internal.quoted.CompileTime.patternHole[scala.List[scala.Int]].foreach[T](scala.internal.quoted.CompileTime.patternHole[scala.Function1[scala.Int, T]])
}
Result: None

Scrutinee: {
  val a: scala.Int = 4
  val b: scala.Int = 4
  ()
}
Pattern: {
  @scala.internal.quoted.CompileTime.patternType type T
  val a: T = scala.internal.quoted.CompileTime.patternHole[T]
  val b: T = scala.internal.quoted.CompileTime.patternHole[T]
  ()
}
Result: Some(List(Type(scala.Int), Expr(4), Expr(4)))

Scrutinee: {
  val a: scala.Int = 4
  val b: scala.Int = 5
  ()
}
Pattern: {
  @scala.internal.quoted.CompileTime.patternType type T
  val a: T = scala.internal.quoted.CompileTime.patternHole[T]
  val b: T = scala.internal.quoted.CompileTime.patternHole[T]
  ()
}
Result: Some(List(Type(scala.Int), Expr(4), Expr(5)))

Scrutinee: {
  val a: scala.Int = 4
  val b: scala.Predef.String = "x"
  ()
}
Pattern: {
  @scala.internal.quoted.CompileTime.patternType type T
  val a: T = scala.internal.quoted.CompileTime.patternHole[T]
  val b: T = scala.internal.quoted.CompileTime.patternHole[T]
  ()
}
Result: Some(List(Type(scala.Int | java.lang.String), Expr(4), Expr("x")))

Scrutinee: {
  val a: scala.Int = 4
  val b: scala.Predef.String = "x"
  ()
}
Pattern: {
  @scala.internal.quoted.CompileTime.patternType type T <: scala.Int
  val a: T = scala.internal.quoted.CompileTime.patternHole[T]
  val b: T = scala.internal.quoted.CompileTime.patternHole[T]
  ()
}
Result: None

Scrutinee: scala.List.apply[scala.Int](1, 2, 3).map[scala.Double](((x: scala.Int) => x.toDouble./(2))).map[java.lang.String](((y: scala.Double) => y.toString()))
Pattern: {
  @scala.internal.quoted.CompileTime.patternType type T
  @scala.internal.quoted.CompileTime.patternType type U
  @scala.internal.quoted.CompileTime.patternType type V

  (scala.internal.quoted.CompileTime.patternHole[scala.List[T]].map[U](scala.internal.quoted.CompileTime.patternHole[scala.Function1[T, U]]).map[V](scala.internal.quoted.CompileTime.patternHole[scala.Function1[U, V]]): scala.collection.immutable.List[scala.Any])
}
Result: Some(List(Type(scala.Int), Type(scala.Double), Type(java.lang.String), Expr(scala.List.apply[scala.Int](1, 2, 3)), Expr(((x: scala.Int) => x.toDouble./(2))), Expr(((y: scala.Double) => y.toString()))))

Scrutinee: ((x: scala.Int) => x)
Pattern: {
  @scala.internal.quoted.CompileTime.patternType type T

  (scala.internal.quoted.CompileTime.patternHole[scala.Function1[T, T]]: scala.Function1[scala.Nothing, scala.Any])
}
Result: Some(List(Type(scala.Int), Expr(((x: scala.Int) => x))))

Scrutinee: ((x: scala.Int) => x.toString())
Pattern: {
  @scala.internal.quoted.CompileTime.patternType type T

  (scala.internal.quoted.CompileTime.patternHole[scala.Function1[T, T]]: scala.Function1[scala.Nothing, scala.Any])
}
Result: None

Scrutinee: ((x: scala.Any) => scala.Predef.???)
Pattern: {
  @scala.internal.quoted.CompileTime.patternType type T

  (scala.internal.quoted.CompileTime.patternHole[scala.Function1[T, T]]: scala.Function1[scala.Nothing, scala.Any])
}
Result: Some(List(Type(scala.Nothing), Expr(((x: scala.Any) => scala.Predef.???))))

Scrutinee: ((x: scala.Nothing) => (1: scala.Any))
Pattern: {
  @scala.internal.quoted.CompileTime.patternType type T

  (scala.internal.quoted.CompileTime.patternHole[scala.Function1[T, T]]: scala.Function1[scala.Nothing, scala.Any])
}
Result: None

